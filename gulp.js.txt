★开打命令快捷键 win+r

ctrl+c 结束当前命令

gulp 中 命令和命令之间的衔接通常就用的是pipe。


★安装node      
node -v
npm -v

升级node.js到最新稳定版  n stable
npm update moduleName：更新node模块
npm uninstall moudleName：卸载node模块

★安装cnpm

npm install cnpm -g --registry=https://registry.npm.taobao.org


执行cnpm -v 显示版本号即安装成功 


★全局安装gulp

执行 cnpm install gulp -g

执行 gulp -v 显示版本号即安装成功 


★项目文件根目录新建package.json
进入你的项目文件
d:
cd www/myapp

执行命令 cnpm init 来新建package.json

依次输入信息
项目名称，版本号，描述信息，。。。。其他的可为空
确认 输入 yes 

★检测package.json是否成功新建

查看项目文件根目录，是否新建package.json，且内容是否和你终端中输入的一致。 package.json内容如下：
{   "name": "test",  "version": "1.0.0",  "description": "我是描述",  "main": "index.js",  "scripts": {    "test": "echo \"Error: no test specified\" && exit 1"  },  "author": "",  "license": "ISC"}
注：可不使用cnpm init方式，可选择手动创建package.json配置文件


★本地安装gulp插件

注：全局安装gulp是为了执行gulp任务，本地安装gulp则是为了调用gulp插件的功能
进入你的项目文件路径中后，执行cnpm install gulp --save-dev 

使用―save-dev，将通知计算机在package.json中添加gulp依赖。

★安装插件 

进入你的项目文件路径中后，执行cnpm install gulp-sass --save-dev（列子）

★新建gulpfile.js（重要，重要，重要）
gulpfile.js是gulp的配置文件，放于根目录中。

//gulpfile.js 示例文件

//导入你所需要用的工具包 require('node_modules里对应模块')
var gulp = require('gulp'),
    sass = require('gulp-sass');

// scss 任务
gulp.task('sass',function(){
  return gulp.src('src/css/test.scss') //获取该任务需要的文件
      .pipe( sass() )                  //该任务调用的模块
      .pipe( gulp.dest('src/css') );   //将在 src/css 文件夹中生产test.css
});

// 默认任务
gulp.task('default',['sass','watch1']);

//监听文件
gulp.task('watch1',function(){
    return gulp.watch('src/css/test.scss',['sass']);
    //监听 src/css/test.scss 文件，修改时自动执行 sass 任务。
});

★运行gulp

执行  gulp 任务名称 运行该任务 示例：gulp sass 执行gulpfile.js中的sass任务 

执行  gulp   调用default中的所有任务 


★常用插件

sass的编译（gulp-sass）
less编译 （gulp-less）
重命名（gulp-rename）
自动添加css前缀（gulp-autoprefixer）
压缩css（gulp-clean-css）
js代码校验（gulp-jshint）
合并js文件（gulp-concat）
压缩js代码（gulp-uglify）
压缩图片（gulp-imagemin）
自动刷新页面（gulp-livereload，谷歌浏览器亲测，谷歌浏览器需安装livereload插件）
自动刷新页面（browser-sync）
图片缓存，只有图片替换了才压缩（gulp-cache）
更改提醒（gulp-notify）
（gulp-useref）会将多个文件拼接成单一文件，并输出到相应目录。


★Node中的通配符

*.scss ： * 号匹配当前目录任意文件，所以这里 *.scss 匹配当前目录下所有scss文件
**/*.scss ：匹配当前目录及其子目录下的所有scss文件。
!not-me.scss ：！号移除匹配的文件，这里将移除not-me.scss
*.+(scss|sass) ：+号后面会跟着圆括号，里面的元素用|分割，匹配多个选项。这里将匹配scss和sass文件。

★5个gulp命令
Gulp方法，src,dest，进，出

gulp.task(name, fn)这个你应经见过了

gulp.run(tasks...)尽可能多的并行运行多个task

gulp.watch(glob, fn)当glob内容发生改变时，执行fn

gulp.src(glob)返回一个可读的stream

gulp.dest(glob)返回一个可写的stream

★任务之前先执行的任务['browserSync', 'sass'] 但会同时执行

gulp.task('watch', ['browserSync', 'sass'], function (){
  gulp.watch('app/scss/**/*.scss', ['sass']);
  // Other watchers
})


★按顺序执行 RunSequence 也可以同时执行
顺序
gulp.task('build', function (callback) {
  runSequence('clean:dist',
    ['sass', 'useref', 'images', 'fonts'],
    callback
  )
})
同步
gulp.task('task-name', function(callback) {
  runSequence('task-one', ['tasks','two','run','in','parallel'], 'task-three', callback);
});

★//开发任务用法 默认执行 gulp
gulp.task('default', function (callback) {
  runSequence(['less','browserSync', 'watch'],
    callback
  )
})

