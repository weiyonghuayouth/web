@import "base";

//垂直居中
.ver_align() {
    &:before{
        content: '';
        height: 100%;
        display: inline-block;
        vertical-align: middle;
    }
    & > * {
        display: inline-block; vertical-align: middle;
    }
}




//溢出点点点
.text-overflow(@display: block) {
  display: @display;
  word-wrap: normal; /* for IE */
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}



//左右小布局（默认居左）
.medias(@heigth:"auto") {
    height: @heigth;
    overflow: hidden;
    .medias-variable {
        float: left;
        height:@heigth;
        font-size: 0px;
        .ver_align();
        * {
            font-size: 14px;
        }
    }
    .medias-body {
        display:table-cell;
        width: 100%;
        height:@heigth;
        background: red;
    }
}
.medias-right {
    .medias-variable {
        float: right;
    }
}






//结构化样式（双飞翼左右布局）
.layout {
    zoom:1;
    &:after {
        display:block; content:""; clear:both;
    }
}
//左侧固定右侧自适应（lay-cont要在lay-r 里面）
.layout-l(@layWidth:200px) {
    .lay-fixed {
        float:left; width:@layWidth;  position:relative;
    }
    .lay-body {
        float:right; margin-left:-@layWidth; width:100%; position:relative;
    }
	//laycont在laybody里面
    .lay-cont {
        margin-left:@layWidth; 
    }
}


//右侧固定，左侧自适应
.layout-r(@layWidth:200px) {
    .lay-fixed {
        float:right; width:@layWidth;  position:relative;
    }
    .lay-body {
        float:left; margin-right:-@layWidth; width:100%; position:relative;
    }
    .lay-cont {
        margin-right:@layWidth; 
    }
}

/*双飞翼（cy-LMR,cy-LR,cy-RL）*/
.cy-LR,.cy-RL,.cy-LMR { zoom:1;}
.cy-LR:after,.cy-RL:after,.cy-LMR:after { display:block; content:""; clear:both;}
/*L-R*/
.cyLR-right { float:right; margin-left:-200px; width:100%; position:relative;}
.cyLR-Rcontent { margin-left:200px; }
.cyLR-left { float:left; width:200px;  position:relative;}
/*R-L*/
.cyRL-right { float:right; width:200px; position:relative; position:relative;}
.cyRL-left { float:left; margin-right:-200px; width:100%; position:relative;}
.cyRL-Lcontent { margin-right:200px; position:relative; z-index:1;}
/*L-M-R*/
.cyLMR-left { float:left; margin-left:-100%; width:200px;  position:relative;}
.cyLMR-min { float:left; width:100%; position:relative;}
.cyLMR-right { float:left; width:200px; margin-left:-200px;  position:relative;}
.cyLMR-content { margin:0 200px; }



//boorstrop左中右布局
//表单类的左中右布局(可适用于列表)
.f-lay(@optWidth:100px,@othWidth:100px) {
    //@optWidth:100px;  //标题区宽度
    //@othWidth:100px;  //其他区宽度
    display: inline-table;
    table-layout: fixed;
    & > * {
        display: table-cell;
        vertical-align: middle;
    }
    & > .f-opt {
        padding: 0em 0.8em;
        width: @optWidth;
    }
    & > .f-ody {
    }
    & > .f-oth {
        padding: 0em 0.8em;
        width: @othWidth;
    }
}



//简单的栅格系统
//@name指的是类型名字，@range指的是每一格里面内容与内容之间的边距，@sum是总列数
//默认是30px的行距，12个格子，名字为:col-lay-1,col-lay-2....
.grid(@range:30px,@sum:12,@name:col-lay) {
    .row,.@{name}-row {
        &:after,&:before {
            display: table;
            content: '';
        }
        &:after {
            clear: both;
        }
        margin-left: (@range/-2);
        margin-right: (@range/-2);
    }
    .make-grid-columns(){
        //建立第一个样式，即: col-1,然后执行第二步的方法
        .col(@index) {
            @item: ~".@{name}-@{index}";
            .col((@index + 1), @item);
        }
        //建立第二个样式，即col-1,col-2
        //col(@index,@list)是一个方法，@index 是当前的数字，@list是后面的一个名字（即字符串）
        //它这里用了个死循环，当@index =< 12 的时候就一直在第二步循环，直到当@index > 12 的时候才进入到第三步
        //到了第三步的时候，第二步里面的@oName 已经累积成了.col-1,col-2.......col-12;
        .col(@index, @list) when (@index =< @sum) {
            @iteme: ~".@{name}-@{index}";
            @oName: ~"@{list}, @{iteme}";
            .col((@index + 1), @oName);
        }
        //第三步,就是加样式
        .col(@index, @list) when (@index > @sum) {
            @{list} {
                position: relative;
                // Prevent columns from collapsing when empty
                min-height: 1px;
                // Inner gutter via padding
                padding-left:  (@range / 2);
                padding-right: (@range / 2);
            }
        }
        .col(1); // kickstart it
    }

    .float-grid-columns() {
        .col(@index) {
            @item: ~".@{name}-@{index}";
            .col((@index + 1), @item);
        }
        .col(@index, @list) when (@index =< @sum) {
            @item: ~".@{name}-@{index}";
            @oName: ~"@{list}, @{item}";
            .col((@index + 1), @oName);
        }
        .col(@index, @list) when (@index > @sum) { // terminal
            @{list} {
                float: left;
            }
        }
        .col(1); // kickstart it
    }

    .make-grid-width(){
        .col(@index) when (@index =< @sum) {
            @item: ~".@{name}-@{index}";
            @{item}{
                width:(@index/@sum)*100%;
            }
            .col((@index + 1));
        }
        .col(1); // kickstart it

    }

    .make-grid-columns();
    .float-grid-columns();
    .make-grid-width();
}


.grid(20px,12);





//面板
.p-panel {
    background-color: #fff; padding:0px 12px;
    .p-heading {
        padding: 12px 0px; border-bottom: 1px solid #2474bd;
        .p-title {
            font-size: 16px; border-left: 4px solid #eea821; padding-left: 10px; font-weight: bold;
        }
    }
    .p-body {
        padding: 8px 0px;

    }
}

//搜索框
.simple-search(@width:100px,@height:40px){
    position: relative;
    input {
        border: none; background-color: #fff;
        width: 100%;
        height: @height;
        padding-right: (-@width+6);
        padding-left: 4px;
        outline: none;
    }
    .submit{
        position: absolute; right: 0px; top: 0px; cursor: pointer;
        background-color: #fff; border:none;
        width: @width; height: @height;
        outline: none;
        .ver_align();
        i {
            font-size: 14px;
        }
    }
}


//提示-----------------------------------------------------------
.fade {
    opacity: 0;
    -webkit-transition: opacity .15s linear;
    -o-transition: opacity .15s linear;
    transition: opacity .15s linear
}

.tooltip {
    position: absolute;
    z-index: 1070;
    display: block;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    font-size: 12px;
    font-style: normal;
    font-weight: 400;
    line-height: 1.42857143;
    text-align: left;
    text-align: start;
    text-decoration: none;
    text-shadow: none;
    text-transform: none;
    letter-spacing: normal;
    word-break: normal;
    word-spacing: normal;
    word-wrap: normal;
    white-space: normal;
    filter: alpha(opacity=0);
    opacity: 0;
    line-break: auto
}

.tooltip-arrow {
    position: absolute;
    width: 0;
    height: 0;
    border-color: transparent;
    border-style: solid
}

.tooltip.in {
    filter: alpha(opacity=90);
    opacity: .9
}

.tooltip.bottom {
    padding: 5px 0;
    margin-top: 3px
}

.tooltip.bottom .tooltip-arrow {
    top: 0;
    left: 50%;
    margin-left: -5px;
    border-width: 0 5px 5px;
    border-bottom-color: #1097ff;
}

.tooltip-inner {
    max-width: 200px;
    padding: 3px 8px;
    color: #fff;
    text-align: center;
    background-color: #1097ff;
    border-radius: 4px
}


//提示-----------------------------------------------------